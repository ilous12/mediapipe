input_stream: "input_video"
input_stream: "second_input"
output_stream: "output_video"

node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_video"
  input_stream: "second_input"
  input_stream: "FINISHED:foreground_mask"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_video"
  output_stream: "throttled_second_input"
}

node: {
  calculator: "ImageTransformationCalculator"
  input_stream: "IMAGE:throttled_input_video"
  output_stream: "IMAGE:transformed_input_video"
  node_options: {
    [type.googleapis.com/mediapipe.ImageTransformationCalculatorOptions] {
      output_width: 256
      output_height: 144
    }
  }
}

node {
  calculator: "PreviousLoopbackCalculator"
  input_stream: "MAIN:throttled_input_video"
  input_stream: "LOOP:foreground_mask"
  input_stream_info: {
    tag_index: "LOOP"
    back_edge: true
  }
  output_stream: "PREV_LOOP:previous_foreground_mask"
}

node {
  calculator: "SetAlphaCalculator"
  input_stream: "IMAGE:transformed_input_video"
  input_stream: "ALPHA:previous_foreground_mask"
  output_stream: "IMAGE:mask_embedded_input_video"
}

node {
  calculator: "TfLiteConverterCalculator"
  input_stream: "IMAGE:mask_embedded_input_video"
  output_stream: "TENSORS:image_tensor"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteConverterCalculatorOptions] {
      zero_center: false
      max_num_channels: 3
      output_tensor_float_range {
        min: 0.0
         max: 1.0
      }
    }
  }
}

node {
  calculator: "TfLiteCustomOpResolverCalculator"
  output_side_packet: "op_resolver"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteCustomOpResolverCalculatorOptions] {
      use_gpu: false
    }
  }
}

node {
  calculator: "TfLiteInferenceCalculator"
  input_stream: "TENSORS:image_tensor"
  output_stream: "TENSORS:segmentation_tensor"
  input_side_packet: "CUSTOM_OP_RESOLVER:op_resolver"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteInferenceCalculatorOptions] {
      delegate { xnnpack {} }
      model_path: "selfie_segmentation_landscape.tflite"
      use_gpu: false
    }
  }
}

node {
  calculator: "TfLiteTensorsToSegmentationCalculator"
  input_stream: "TENSORS:segmentation_tensor"
  input_stream: "PREV_MASK:previous_foreground_mask"
  output_stream: "MASK:foreground_mask"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteTensorsToSegmentationCalculatorOptions] {
      tensor_width: 256
      tensor_height: 144
      tensor_channels: 1
      combine_with_previous_ratio: 0.8
      output_layer_index: 0
    }
  }
}

node {
  calculator: "BackgroundBlendCalculator"
  input_stream: "IMAGE:throttled_input_video"
  input_stream: "MASK:foreground_mask"
  input_stream: "SECOND:throttled_second_input"
  output_stream: "IMAGE:output_video"
  node_options: {
    [type.googleapis.com/mediapipe.BackgroundBlendCalculatorOptions] {
      color { r: 0 g: 0 b: 255 }
      mask_channel: RED
      invert_mask: true
      adjust_with_luminance: false
    }
  }
}
